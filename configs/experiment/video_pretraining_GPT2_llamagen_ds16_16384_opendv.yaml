# @package _global_

defaults:
  - override /data: tokenized_sequence_opendv
  - override /callbacks: callbacks_opendv_training
  - override /trainer: deepspeed2
  - override /logger: many_loggers
  - override /paths: jeanzay_nuplan
  - override /scheduler: warmup_stable_drop

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters


trainer:
  max_epochs: 1
  # clip gradients' global norm to using gradient_clip_algorithm='norm' by default
  gradient_clip_val: 1.0
  accumulate_grad_batches: 1
  log_every_n_steps: 5
  default_root_dir: ${paths.output_dir}/${name}/
  val_check_interval: 0.25

scheduler:
  warmup_iter: 15529 # 1% ~ end_iter * 0.01
  end_iter: 155293 # (len_dataset - 1) // BATCH_SIZE * nb_epochs = (2791296 - 1) // 384 * 1 = 7269
  drop_iter: 0 # pretrain stage no annealing 

data:
  data_root_dir: $fzh_ALL_CCFRSCRATCH/OpenDV_processed/flat_tokens
  video_list_path: $fzh_ALL_CCFRSCRATCH/OpenDV_processed/train.json
  val_video_list_path: $fzh_ALL_CCFRSCRATCH/OpenDV_processed/val.json
  sequence_length: 8
  subsampling_factor: 5

# VQ_ds16_16384_llamagen/metadata.json indicates 18x32 quantized image features for nuplan
model:
  _target_: world_model.gpt2.NextTokenPredictor
  compile: False # compile model for faster training with pytorch 2.0
  log_norm: False # For debuging purposes, log gradients norm to loggers
  mup_base_shapes: ./mup_shapes/gpt2_24layers_basewidth256.bsh
  network:
    _target_: world_model.gpt2.mup_gpt2.MupGPT2
    embedding_dim: 256
    dim_heads: 128
    nb_layers: 24
    mlp_dim_mult: 4
    vocabulary_size: 16385
    nb_timesteps: ${data.sequence_length}
    nb_tokens_per_timestep: 576 # 18*32 = 576 | h*w of visual tokens
    init_std: 0.02
    output_tied: True
  optimizer_conf:
    lr: 0.0001
    weight_decay: 1e-8
    betas: [0.9, 0.95]
    eps: 1e-08
    decoupled_wd: True
